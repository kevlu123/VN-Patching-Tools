# Copyright (C) 2023 Kevin Lu

import sys

CHANGES = {
    # (Offset, Old, New)
    (0x0008F962, 0xE8, 0xEB)
    (0x0008F963, 0x20, 0x1B)
    (0x0008F964, 0x6D, 0x90)
    (0x0008F965, 0x04, 0x90)
    (0x0008F966, 0x00, 0x90)
    (0x0008F97F, 0x83, 0xC7)
    (0x0008F980, 0xEC, 0x46)
    (0x0008F981, 0x44, 0x28)
    (0x0008F982, 0x8B, 0x43)
    (0x0008F983, 0xF4, 0x00)
    (0x0008F984, 0x8B, 0x6F)
    (0x0008F985, 0xCE, 0x00)
    (0x0008F986, 0x89, 0xC7)
    (0x0008F987, 0x75, 0x46)
    (0x0008F988, 0xF0, 0x2C)
    (0x0008F989, 0xE8, 0x6E)
    (0x0008F98A, 0xB2, 0x00)
    (0x0008F98B, 0x2D, 0x73)
    (0x0008F98C, 0xF8, 0x00)
    (0x0008F98D, 0xFF, 0xEB)
    (0x0008F98E, 0x83, 0x09)
    (0x0008F98F, 0x7E, 0x90)
    (0x0008F990, 0x38, 0x90)
    (0x0008F991, 0x00, 0x90)
    (0x0008F998, 0x74, 0xC7)
    (0x0008F999, 0x08, 0x46)
    (0x0008F99A, 0x8D, 0x30)
    (0x0008F99B, 0x4E, 0x6F)
    (0x0008F99C, 0x34, 0x00)
    (0x0008F99D, 0xE8, 0x6C)
    (0x0008F99E, 0xAE, 0x00)
    (0x0008F99F, 0x2E, 0xC7)
    (0x0008F9A0, 0xF8, 0x46)
    (0x0008F9A1, 0xFF, 0x34)
    (0x0008F9A2, 0xC7, 0x61)
    (0x0008F9A3, 0x46, 0x00)
    (0x0008F9A4, 0x3C, 0x73)
    (0x0008F9A5, 0xFF, 0x00)
    (0x0008F9A6, 0xFF, 0x66)
    (0x0008F9A7, 0xFF, 0xC7)
    (0x0008F9A8, 0xFF, 0x46)
    (0x0008F9A9, 0xC7, 0x38)
    (0x0008F9AA, 0x46, 0x00)
    (0x0008F9AB, 0x40, 0x00)
    (0x0008F9AC, 0xFF, 0xEB)
    (0x0008F9AD, 0xFF, 0xB6)
    (0x0008F9AE, 0xFF, 0x90)
    (0x0008F9AF, 0xFF, 0x90)
}

if __name__ == "__main__":
    if len(sys.argv) != 3:
        print("Usage: python patch_font.py <original.exe> <output.exe>")
        exit()
    
    original_exe = sys.argv[1]
    output_exe = sys.argv[2]

    with open(original_exe, "rb") as f:
        data = bytearray(f.read())
    
    for offset, old, new in CHANGES:
        if data[offset] != old:
            print(f"Expected {old} at {offset} but found {data[offset]}")
            exit()
        data[offset] = new

    with open(output_exe, "wb") as f:
        f.write(data)
